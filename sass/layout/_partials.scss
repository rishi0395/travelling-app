.row {
  max-width: $grid-width;
  // background-color: #eee;
  margin: 0 auto;
  display: block;

  //  not sudo class, select everything except last child, hence on last child no margin bottom will be seen
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: $grid-width-small;
    padding: 0 3rem;
  }

  //this will add the row height into the block and comes form mixins.scss
  @include clearfix;

  //   attributes - ^ beginning means all the attributes starts with col
  [class^='col-'] {
    // background-color: orangered;
    float: left;
    // text-align: center;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;

    }
  }

  .col-1-of-2 {
    //   calc() function, allows calculation
    width: calc((100% - #{$gutter-horizontal}) / 2);

    // background-color: orangered;
    // float: left;

    // &:not(:last-child) {
    //   margin-right: $gutter-horizontal;
    // }
  }

  .col-1-of-3 {
    //   calc() function, allows calculation
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);

    // background-color: orangered;
    // float: left;

    // &:not(:last-child) {
    //   margin-right: $gutter-horizontal;
    // }
  }

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}